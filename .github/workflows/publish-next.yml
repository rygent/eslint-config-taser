name: Publish next

on:
  workflow_dispatch:

jobs:
  publish:
    concurrency:
      group: publish-next
      cancel-in-progress: true
    name: Publish @next release to npm
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    if: github.repository_owner == 'rygent' && !(github.event_name == 'push' && startsWith(github.event.head_commit.message, 'chore(release)'))
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Install Node.js v22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm
          registry-url: https://registry.npmjs.org/
      - name: Check current @next version
        id: release-check
        run: |
          if [[ $(pnpm view eslint-config-terrax@next version | grep -e "$(git rev-parse --short HEAD)") ]]; \
            then echo "RELEASE=0" >> "$GITHUB_OUTPUT"; \
            else echo "RELEASE=1" >> "$GITHUB_OUTPUT"; \
          fi
      - name: Install dependencies
        if: steps.release-check.outputs.release == '1'
        run: pnpm install --frozen-lockfile --prefer-offline
      - name: Bump version
        if: steps.release-check.outputs.release == '1'
        run: pnpm exec tsx scripts/bump-version.ts
      - name: Publish new @next version
        if: steps.release-check.outputs.release == '1'
        run: |
          pnpm version $(jq --raw-output '.version' package.json)-next.$(git rev-parse --short HEAD)
          pnpm publish --no-git-checks --tag next || true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
      - name: Deprecate old @next versions
        if: steps.release-check.outputs.release == '1'
        run: pnpm dlx @favware/npm-deprecate@latest --name "*next*" --package eslint-config-terrax --message "No longer supported. Install the latest @next release" || true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
