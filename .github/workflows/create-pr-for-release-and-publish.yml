name: Create PR for new releases and publish new version

on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    # Run every 2 weeks on Saturday at 12:00
    - cron: '0 12 */14 * 6'

jobs:
  create_pr:
    name: Create PR for new version
    runs-on: ubuntu-latest
    if: github.repository_owner == 'rygent' && github.event_name != 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Install Node.js v22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline
      - name: Set Git User and Email
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Bump version
        run: pnpm exec tsx scripts/bump-version.ts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create branch for changes, add all changes and push
        run: |
          git checkout -b "chore/release/$(jq --raw-output '.version' package.json)"

          # Run changelog generation, deno script, website version bump
          pnpm run changelog

          # Add all changes, commit and push
          git add --all .
          git commit -m "chore(release): $(jq --raw-output '.version' package.json) ðŸŽ‰" -m "Build ran for ${GITHUB_SHA}"
          git push -u origin "chore/release/$(jq --raw-output '.version' package.json)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Pull Request
        run: pnpm exec tsx scripts/actions/create-pr.ts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create_release:
    name: Create release and publish
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    if: github.repository_owner == 'rygent' && github.event_name == 'push' && startsWith(github.event.head_commit.message, 'chore(release)') && !contains(github.event.head_commit.message, '[skip ci]')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Install Node.js v22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm
          registry-url: https://registry.npmjs.org/
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline
      - name: Publish release to npm
        run: |
          pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
      - name: Create GitHub release
        run: pnpm exec tsx scripts/actions/create-release.ts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
